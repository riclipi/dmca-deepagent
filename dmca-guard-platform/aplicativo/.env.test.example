# Test Environment Configuration
# ================================
# This file contains test-specific environment variables
# Copy this to .env.test and fill in appropriate test values
# WARNING: Never use production IDs or credentials here!

# Test Database (use a separate test database)
DATABASE_URL="postgresql://user:password@localhost:5432/dmca_guard_test"

# Test User IDs (generate new IDs for testing)
TEST_USER_ID=""
TEST_ADMIN_USER_ID=""
TEST_BRAND_PROFILE_ID=""
TEST_MONITORING_SESSION_ID=""
TEST_DETECTED_CONTENT_ID=""

# Test User Credentials
TEST_USER_EMAIL="testuser@example.com"
TEST_USER_PASSWORD="test123456"
TEST_ADMIN_EMAIL="testadmin@example.com"
TEST_ADMIN_PASSWORD="admin123456"

# Test Brand Profile Data
TEST_BRAND_NAME="Test Brand"
TEST_BRAND_DESCRIPTION="Test brand for automated testing"
TEST_BRAND_URLS='["https://test-brand.com"]'
TEST_BRAND_KEYWORDS='["test brand", "test product"]'

# Test Monitoring Session Data
TEST_SESSION_NAME="Test Monitoring Session"
TEST_SESSION_DESCRIPTION="Automated test session"
TEST_TARGET_PLATFORMS='["google", "youtube"]'

# Test Content Data
TEST_INFRINGING_URL="https://test-infringer.com/test-content"
TEST_PLATFORM="WEBSITE"
TEST_CONTENT_TYPE="IMAGE"

# Test Environment Flags
NODE_ENV="test"
IS_TEST_ENVIRONMENT="true"
ALLOW_TEST_DATA_CREATION="true"
SKIP_EMAIL_SENDING="true"
USE_MOCK_SEARCH_API="true"

# Test API Keys (use test/sandbox keys only)
TEST_SERPER_API_KEY=""
TEST_GOOGLE_API_KEY=""
TEST_GOOGLE_CSE_ID=""

# Redis Test Configuration (optional - for test isolation)
TEST_UPSTASH_REDIS_REST_URL=""
TEST_UPSTASH_REDIS_REST_TOKEN=""

# Security (use different secrets for testing)
TEST_NEXTAUTH_SECRET="test-secret-key-only-for-testing"
TEST_API_SIGNING_SECRET="test-signing-secret-only-for-testing"
TEST_CRON_SECRET="test-cron-secret-only-for-testing"